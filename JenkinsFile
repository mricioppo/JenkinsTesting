def data = 'inizio'
pipeline {

    parameters {
        string(name: 'environment', defaultValue: 'terraform', description: 'Workspace/environment file to use for deployment')
        booleanParam(name: 'autoApprove', defaultValue: true, description: 'Automatically run apply after generating plan?')
    }

    environment {
        
    }

   agent  any
        options {
                timestamps ()
                ansiColor('xterm')
            }
    stages {
        stage('checkout') {
            steps {
                 script{
                        dir("terraform"){
                            git "https://github.com/mricioppo/JenkinsTesting.git"
                        }
                        
                    }
                }
            }

        stage('Plan') {
            steps {
                sh 'pwd;cd terraform/terraform-database ; terraform init -input=false'
                sh 'pwd;cd terraform/terraform-database ; terraform workspace new ${environment}'
                sh 'pwd;cd terraform/terraform-database ; terraform workspace select ${environment}'
                sh "pwd;cd terraform/terraform-database ; terraform plan -input=false -out tfplan"
                sh 'pwd;cd terraform/terraform-database ; terraform show -no-color tfplan > tfplan.txt'
            }
        }

        stage('Approval') {
           when {
               not {
                   equals expected: true, actual: params.autoApprove
               }
           }

           steps {
               script {
                    def plan = readFile 'terraform/terraform-database/tfplan.txt'
                    input message: "Do you want to apply the plan?",
                    parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
               }
           }
       }
      
        stage('Apply') {
            steps {
                sh "pwd;cd terraform/terraform-database ; terraform apply -input=false tfplan"
                script {
                    data = readFile(file: 'ip.txt')
                    println(data)
                }
            }
        }

        stage('Creazione Client Geco'){
            steps {
                build job : 'pipe2', parameters:[string(name='indirizzoDB', value: "${data}")]
            }
        }


    }

  }
